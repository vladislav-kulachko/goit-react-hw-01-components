{"version":3,"sources":["components/friend-list/friends-list.module.css","components/social-profile/social-profile.module.css","components/statistics/statistics.module.css","components/transaction-history/transaction-history.module.css","components/friend-list/friend-list-item.jsx","components/friend-list/friends-list.jsx","components/social-profile/social-profile.jsx","components/statistics/statistics.jsx","components/transaction-history/transaction-history.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FriendListItem","avatar","name","isOnline","className","src","alt","width","FriendList","friends","map","friend","id","propTypes","PropTypes","arrayOf","shape","number","UserProfile","props","tag","location","stats","followers","views","likes","randColor","Math","floor","random","Statistics","title","elem","style","backgroundColor","label","percentage","console","log","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88f1dd83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"friends-list_friend-list__30qs3\",\"friend-list__item\":\"friends-list_friend-list__item__1dYmX\",\"status\":\"friends-list_status__2CTnn\",\"active\":\"friends-list_active__2nSN4\",\"friend-list__item-avatar\":\"friends-list_friend-list__item-avatar__1Z7bD\",\"friend-list__item-name\":\"friends-list_friend-list__item-name__1mbvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"social-profile_profile__by_Ro\",\"profile__description\":\"social-profile_profile__description__1Q_3T\",\"profile__avatar\":\"social-profile_profile__avatar__1BPP-\",\"profile__name\":\"social-profile_profile__name__ETiV-\",\"profile__tag\":\"social-profile_profile__tag__1-vpo\",\"stats\":\"social-profile_stats__3bPKA\",\"stats__label\":\"social-profile_stats__label__JERLt\",\"stats__quantity\":\"social-profile_stats__quantity__1PqfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__1_g9q\",\"statistics__title\":\"statistics_statistics__title__2YXIx\",\"stat-list\":\"statistics_stat-list__3-lO-\",\"stat-list__item\":\"statistics_stat-list__item__2SZQJ\",\"stat-list__label\":\"statistics_stat-list__label__3oEex\",\"stat-list__percentage\":\"statistics_stat-list__percentage__azkY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"transaction-history_transaction-history__1gG0R\"};","import PropTypes from 'prop-types';\n\nexport default function FriendListItem({avatar, name, isOnline}) {\n  return (\n    <li className=\"friend-list__item\">\n      <span className={isOnline ? 'status active' : 'status'}></span>\n      <img\n        className=\"friend-list__item-avatar\"\n        src={avatar}\n        alt={name}\n        width=\"48\"\n      />\n      <p className=\"friend-list__item-name\">{name}</p>\n    </li>\n  );\n}\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './friend-list-item';\nimport './friends-list.module.css';\n\nexport default function FriendList({friends}) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map((friend) => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n          key={friend.id}\n        />\n      ))}\n    </ul>\n  );\n}\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({id: PropTypes.number})),\n};\n","import PropTypes from 'prop-types';\nimport './social-profile.module.css';\nexport default function UserProfile(props) {\n  const {name, tag, location, avatar, stats} = props;\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__description\">\n        <img\n          className=\"profile__avatar\"\n          src={avatar}\n          alt=\"Аватар пользователя\"\n        />\n        <p className=\"profile__name\">{name}</p>\n        <p className=\"profile__tag\">@{tag}</p>\n        <p className=\"profile__location\"> {location} </p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"stats__label\">Followers</span>\n          <span className=\"stats__quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"stats__label\">Views</span>\n          <span className=\"stats__quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"stats__label\">Likes</span>\n          <span className=\"stats__quantity\"> {stats.likes} </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n","import PropTypes from 'prop-types';\nimport './statistics.module.css';\n\nconst randColor = () =>\n  'rgb(' +\n  (() => Math.floor(Math.random() * 255))() +\n  ', ' +\n  (() => Math.floor(Math.random() * 255))() +\n  ', ' +\n  (() => Math.floor(Math.random() * 255))() +\n  ')';\n\nexport default function Statistics({title, stats}) {\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"statistics__title\">{title}</h2>}\n      <ul className=\"stat-list\">\n        {stats.map((elem) => (\n          <li\n            key={elem.id}\n            className=\"stat-list__item\"\n            style={{backgroundColor: randColor()}}\n          >\n            <span className=\"stat-list__label\">{elem.label}</span>\n            <span className=\"stat-list__percentage\">{elem.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n\nconsole.log(randColor());\n","import PropTypes from 'prop-types';\nimport './transaction-history.module.css';\n\nexport default function TransactionHistory({items}) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n","import './App.css';\nimport FriendList from './components/friend-list/friends-list';\nimport Profile from './components/social-profile/social-profile';\nimport Statistics from './components/statistics/statistics';\nimport TransactionHistory from './components/transaction-history/transaction-history';\n\nimport user from './components/social-profile/user.json';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport friends from './components/friend-list/friends.json';\nimport transactions from './components/transaction-history/transactions.json';\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}