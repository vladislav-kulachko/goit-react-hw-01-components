{"version":3,"sources":["friend-list/friend-list-item.jsx","friend-list/friends-list.jsx","social-profile/social-profile.jsx","statistics/statistics.jsx","transaction-history/transaction-history.jsx","App.js","reportWebVitals.js","index.js"],"names":["FriendListItem","avatar","name","isOnline","className","src","alt","width","FriendList","friends","map","friend","id","UserProfile","props","tag","location","stats","followers","views","likes","Statistics","title","elem","label","percentage","propTypes","PropTypes","arrayOf","shape","number","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49ac1c3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function FriendListItem({avatar, name, isOnline}) {\r\n  return (\r\n    <li className=\"item\">\r\n      <span className={isOnline ? 'status active' : 'status'}></span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './friend-list-item';\r\n\r\nexport default function FriendList({friends}) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map((friend) => (\r\n        <FriendListItem\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n          key={friend.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({id: PropTypes.number})),\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function UserProfile(props) {\r\n  const {name, tag, location, avatar, stats} = props;\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img className=\"avatar\" src={avatar} alt=\"Аватар пользователя\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\"> {tag} </p>\r\n        <p className=\"location\"> {location} </p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\"> {stats.likes} </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number),\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({title, stats}) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      <h2 className=\"title\">{title && 'Upload stats'}</h2>\r\n\r\n      <ul className=\"stat-list\">\r\n        {stats.map((elem) => (\r\n          <li key={elem.id} className=\"item\">\r\n            <span className=\"label\">{elem.label}</span>\r\n            <span className=\"percentage\">{elem.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport './transaction-history.css';\r\n\r\nexport default function TransactionHistory({items}) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import './App.css';\r\nimport FriendList from './friend-list/friends-list';\r\nimport Profile from './social-profile/social-profile';\r\nimport Statistics from './statistics/statistics';\r\nimport TransactionHistory from './transaction-history/transaction-history';\r\n\r\nimport user from '../src/social-profile/user.json';\r\nimport statisticalData from '../src/statistics/statistical-data.json';\r\nimport friends from '../src/friend-list/friends.json';\r\nimport transactions from '../src/transaction-history/transactions.json';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}