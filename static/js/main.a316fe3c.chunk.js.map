{"version":3,"sources":["components/social-profile/social-profile.module.css","components/friend-list/friend-list-item.module.css","components/statistics/statistics.module.css","components/friend-list/friends-list.module.css","components/transaction-history/transaction-history.module.css","components/friend-list/friend-list-item.jsx","components/friend-list/friends-list.jsx","components/social-profile/social-profile.jsx","components/statistics/statistics.jsx","components/transaction-history/transaction-history.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FriendListItem","avatar","name","isOnline","className","s","friendList__item","active","status","friendList__itemAvatar","src","alt","width","friendList__itemName","FriendList","friends","friendList","map","friend","id","propTypes","PropTypes","arrayOf","shape","number","UserProfile","props","tag","location","stats","profile","profile__description","profile__avatar","profile__name","profile__tag","profile__location","stats__label","stats__quantity","followers","views","likes","randColor","Math","floor","random","Statistics","title","statistics","statistics__title","statlist","elem","statlist__item","style","backgroundColor","statlist__label","label","statlist__percentage","percentage","console","log","TransactionHistory","items","transactionHistory","item","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a316fe3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"social-profile_profile__3cEs7\",\"profile__description\":\"social-profile_profile__description__Sj02h\",\"profile__avatar\":\"social-profile_profile__avatar__aZ5Cu\",\"profile__name\":\"social-profile_profile__name__1vSMo\",\"profile__tag\":\"social-profile_profile__tag__10gs5\",\"stats\":\"social-profile_stats__1qnB8\",\"stats__label\":\"social-profile_stats__label__1oXSB\",\"stats__quantity\":\"social-profile_stats__quantity__MM0eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList__item\":\"friend-list-item_friendList__item__2Gok4\",\"status\":\"friend-list-item_status__3pA8g\",\"active\":\"friend-list-item_active__2w9Gv\",\"friendList__itemAvatar\":\"friend-list-item_friendList__itemAvatar__17efs\",\"friendList__itemName\":\"friend-list-item_friendList__itemName__2mOA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__BC4WH\",\"statistics__title\":\"statistics_statistics__title__12cJt\",\"statlist\":\"statistics_statlist__1jkx3\",\"statlist__item\":\"statistics_statlist__item__36YLP\",\"statlist__label\":\"statistics_statlist__label__tJhGU\",\"statlist__percentage\":\"statistics_statlist__percentage__37eO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friends-list_friendList__3ECuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction-history_transactionHistory__3hTSc\"};","import PropTypes from 'prop-types';\nimport s from './friend-list-item.module.css';\n\nexport default function FriendListItem({avatar, name, isOnline}) {\n  return (\n    <li className={s.friendList__item}>\n      <span\n        className={isOnline ? `${s.active} ${s.status}` : `${s.status}`}\n      ></span>\n      <img\n        className={s.friendList__itemAvatar}\n        src={avatar}\n        alt={name}\n        width=\"48\"\n      />\n      <p className={s.friendList__itemName}>{name}</p>\n    </li>\n  );\n}\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './friend-list-item';\nimport s from './friends-list.module.css';\n\nexport default function FriendList({friends}) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map((friend) => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n          key={friend.id}\n        />\n      ))}\n    </ul>\n  );\n}\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({id: PropTypes.number})),\n};\n","import PropTypes from 'prop-types';\nimport s from './social-profile.module.css';\n\nexport default function UserProfile(props) {\n  const {name, tag, location, avatar, stats} = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.profile__description}>\n        <img\n          className={s.profile__avatar}\n          src={avatar}\n          alt=\"Аватар пользователя\"\n        />\n        <p className={s.profile__name}>{name}</p>\n        <p className={s.profile__tag}>@{tag}</p>\n        <p className={s.profile__location}> {location} </p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.stats__label}>Followers</span>\n          <span className={s.stats__quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.stats__label}>Views</span>\n          <span className={s.stats__quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.stats__label}>Likes</span>\n          <span className={s.stats__quantity}> {stats.likes} </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n","import PropTypes from 'prop-types';\nimport s from './statistics.module.css';\n\nconst randColor = () =>\n  'rgb(' +\n  (() => Math.floor(Math.random() * 255))() +\n  ', ' +\n  (() => Math.floor(Math.random() * 255))() +\n  ', ' +\n  (() => Math.floor(Math.random() * 255))() +\n  ')';\n\nexport default function Statistics({title, stats}) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.statistics__title}>{title}</h2>}\n      <ul className={s.statlist}>\n        {stats.map((elem) => (\n          <li\n            key={elem.id}\n            className={s.statlist__item}\n            style={{backgroundColor: randColor()}}\n          >\n            <span className={s.statlist__label}>{elem.label}</span>\n            <span className={s.statlist__percentage}>{elem.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n\nconsole.log(randColor());\n","import PropTypes from 'prop-types';\nimport s from './transaction-history.module.css';\n\nexport default function TransactionHistory({items}) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n","import FriendList from './components/friend-list/friends-list';\nimport Profile from './components/social-profile/social-profile';\nimport Statistics from './components/statistics/statistics';\nimport TransactionHistory from './components/transaction-history/transaction-history';\n\nimport user from './components/social-profile/user.json';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport friends from './components/friend-list/friends.json';\nimport transactions from './components/transaction-history/transactions.json';\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}